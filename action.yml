# SPDX-FileCopyrightText:  ANNO DOMINI 2024  Jan Chren ~rindeal  <dev.rindeal gmail com>
# SPDX-License-Identifier: GPL-2.0-only OR GPL-3.0-only

name: "Set Up Git Identity from GitHub Username"
description: >
  A GitHub Action to configure Git user.name and user.email based on a GitHub username,
  with options for local or global configuration and failover settings.

inputs:
  'username':
    description: "The GitHub username to fetch details for"
    required: true
    default: 'github-actions[bot]'
  'local':
    description: "Use local Git config instead of global"
    required: false
    default: 'false'
  'use-public-email':
    description: "Use the public email of the GitHub user instead of the user's GitHub noreply address"
    required: false
    default: 'false'
  'git-name-tmpl':
    description: "Template for the Git user.name, using placeholders for user fields (e.g., '{{name}}')"
    required: false
  'failover-name':
    description: "Name to use if API is not available"
    required: false
  'failover-email':
    description: "Email to use if API is not available"
    required: false
  'github-token':
    description: "The GitHub token used to authenticate API requests"
    required: true
    default: ${{ github.token }}

outputs:
  'user-json':
    description: "The GitHub API user object in JSON format"
    value: ${{ steps['main'].outputs['user-json'] }}
  'git-user-name':
    description: "The configured Git user.name"
    value: ${{ steps['main'].outputs['git-user-name'] }}
  'git-user-email':
    description: "The configured Git user.email"
    value: ${{ steps['main'].outputs['git-user-email'] }}

runs:
  using: 'composite'
  steps:
    - id: 'main'
      uses: 'actions/github-script@v7'
      env:
        'INPUT_USERNAME':         ${{ inputs['username'] }}
        'INPUT_LOCAL':            ${{ inputs['local'] }}
        'INPUT_USE-PUBLIC-EMAIL': ${{ inputs['use-public-email'] }}
        'INPUT_GIT-NAME-TMPL':    ${{ inputs['git-name-tmpl'] }}
        'INPUT_FAILOVER-NAME':    ${{ inputs['failover-name'] }}
        'INPUT_FAILOVER-EMAIL':   ${{ inputs['failover-email'] }}
      with:
        'github-token': ${{ inputs['github-token'] }}
        'script': |
          const script = require(`${process.env.GITHUB_ACTION_PATH}/action.js`)
          return await script({github, context, core, glob, io, exec, require})
